// Generate Angular environment files from .env
// This allows Docker (and local dev) to control API/socket/Stripe URLs without hard-coding.
import fs from 'fs';
import path from 'path';
import url from 'url';
import dotenv from 'dotenv';

const __dirname = path.dirname(url.fileURLToPath(import.meta.url));
const projectRoot = path.join(__dirname, '..');

dotenv.config({ path: path.join(projectRoot, '.env') });

function requireVar(name, fallback) {
  const v = process.env[name] || fallback;
  if (!v) {
    console.warn(`[prepare-env] Missing env var ${name} (no fallback) -> leaving empty`);
  }
  return v || '';
}

const apiURL = requireVar('API_URL', 'http://localhost:4900');
const groupSocketURL = requireVar('GROUP_SOCKET_URL', 'http://localhost:9000');
const privateSocketURL = requireVar('PRIVATE_SOCKET_URL', 'http://localhost:10100');
const stripePublicKey = requireVar('STRIPE_PUBLIC_KEY', 'pk_test_placeholder');

const banner = `/**\n * Auto-generated by scripts/prepare-env.mjs\n * Do NOT edit manually. Update .env instead then re-run the script.\n */`;

const content = `${banner}\nexport const environment = {\n  apiURL: '${apiURL}',\n  stripePublicKey: '${stripePublicKey}',\n  groupSocketURL: '${groupSocketURL}',\n  privateSocketURL: '${privateSocketURL}'\n};\n`;

const prodFile = path.join(projectRoot, 'src/environments/environment.ts');
const devFile = path.join(projectRoot, 'src/environments/environment.development.ts');

for (const file of [prodFile, devFile]) {
  fs.writeFileSync(file, content, 'utf8');
  console.log(`[prepare-env] Wrote ${path.relative(projectRoot, file)}`);
}
